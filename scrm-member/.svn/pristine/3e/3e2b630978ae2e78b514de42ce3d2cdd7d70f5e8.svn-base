package cn.com.scrm.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import cn.com.scrm.dto.MemberDTO;
import cn.com.scrm.service.IMemberService;
import cn.com.scrm.tool.BaseResult;
import net.sf.json.JSONObject;

@RestController
@RequestMapping("/member/")
public class MemberController {
	
	 private static Logger log = LoggerFactory.getLogger(MemberController.class);
	 
//	 @Resource
//	 private DiscoveryClient client;
	 @Resource
	 private IMemberService iMemberService;

	 
	 /***
	  * @desc 根据查询该手机号是否存在
	  * @param Long mobile
	  * @return
	  * **/
	 @RequestMapping("mobile")
	 public String findMemberByMobile(@RequestParam("mobile")String mobile) {
		 log.info("[MemberController:mobile]  is start"+mobile);
		 Map<String,Object> map = new HashMap<String,Object>();
		 Integer flag = 1;
		 BaseResult result = null;
		 if(mobile==null || "".equals(mobile)) {
			  flag= 1;
			  map.put("flag",flag);
			    result = new BaseResult("mobile is invaid", 1,map);
		 }else {
			 MemberDTO member = iMemberService.findByMemberDto(mobile);
			 log.info("find member info is end");
			 if(member!=null && member.getMemberId()>0) {
				 flag = 1;
			 }else {
				 flag =0;
			 }
			 map.put("flag",flag);
			 result = new BaseResult("success", 0,map);
		 }
		 log.info("[MemberController:mobile] is end");
		 return JSONObject.fromObject(result).toString();
	 }
	 
	 /**
	  * @desc 绑定会员
	  * @param MemberDTO 
	  * @return 
	  * ****/
	 @RequestMapping("bindMember")
	 public String bindMemberByInfo(MemberDTO dto) {
		 log.info("[MemberController:bindMember]  is start");
		 Map<String,Object> map = new HashMap<String,Object>();
		 BaseResult result = null;
		 if(dto!=null && StringUtils.isNotBlank(dto.getName()) && StringUtils.isNotBlank(dto.getMobile()) && StringUtils.isNotBlank(dto.getMemberCardNo())) {
			 dto.setCreateDate(new Date());
			 //默认来自微信公众号
			 String comeFrom = StringUtils.isNotBlank(dto.getComeFrom())?dto.getComeFrom():"01";
			 dto.setComeFrom(comeFrom);
			 log.info("param:"+dto.toString());
			 iMemberService.updateObjByMobile(dto);
			 map.put("memberId", dto.getMemberId());
			 map.put("memberCardNo",dto.getMemberCardNo());
			 result = new BaseResult(" success ", 0,map);
		 }else {
			 result = new BaseResult("param is invaid", 1);
		 }
		 log.info("param:"+dto.toString());
		 log.info("[MemberController:bindMember]  is end");
		 return JSONObject.fromObject(result).toString();
	 }
	 
	 /**
	  * @desc 创建会员
	  * @param MemberDTO 
	  * @return 
	  * ****/
	 @RequestMapping("create")
	 public String createMemberByInfo(MemberDTO dto) {
		 log.info("[MemberController:create]  is start");
		 Map<String,Object> map = new HashMap<String,Object>();
		 BaseResult result = null;
		 if(dto!=null && StringUtils.isNotBlank(dto.getName()) && dto.getMobile()!=null) {
			 dto.setCreateDate(new Date());
			 //默认来自微信公众号
			 String comeFrom = StringUtils.isNotBlank(dto.getComeFrom())?dto.getComeFrom():"01";
			 dto.setComeFrom(comeFrom);
			 log.info("param:"+dto.toString());
			 iMemberService.insertSelective(dto);
			 map.put("memberId", dto.getMemberId());
			 map.put("memberCardNo",dto.getMemberCardNo());
			 result = new BaseResult(" success ", 0,map);
		 }else {
			 result = new BaseResult("param is invaid", 1);
		 }
		 log.info("param:"+dto.toString());
		 log.info("[MemberController:bind/create]  is end");
		 return JSONObject.fromObject(result).toString();
	 }
	 
	 /**
	  * @DESC 查询会员信息
	  * @param MemberDTO
	  * @return
	  * 
	  * **/
	  @RequestMapping("findMemberInfo")
	  public String getMemberInfo(MemberDTO dto) {
		  log.info("[MemberController:findMemberInfo] is start"+dto.toString());
			 Map<String,Object> map = new HashMap<String,Object>();
			 Integer flag = 1;
			 BaseResult result = null;
			 if(dto.getMemberId()!=null || StringUtils.isNotBlank(dto.getOpenId()) 
					 || StringUtils.isNotBlank(dto.getUnionId()) || 
					 StringUtils.isNotBlank(dto.getThirdId()) || StringUtils.isNotBlank(dto.getMemberCardNo())) {
				 List<MemberDTO> list = iMemberService.findMemberByCondit(dto);
				 map.put("MemberDTO",list);
				 result = new BaseResult("success", 0,map);
			 }else {
				 flag= 1;
				 map.put("flag",flag);
				 result = new BaseResult("mobile is invaid", 1,map);
			 }
			 log.info("[MemberController:findMemberInfo] is end");
			 return JSONObject.fromObject(result).toString();
		  
	  }
	  
	  /**
	   * @desc 会员信息更改
	   * @param MemberId
	   * @param status
	   * @return
	   * **/
	  @RequestMapping("updateInfo")
	  public String updateInfo(MemberDTO dto) {
			 log.info("[MemberController:updateInfo]  is start");
			 Map<String,Object> map = new HashMap<String,Object>();
			 BaseResult result = null;
			 if(dto.getMemberId()!=null) {
				 dto.setUpdateDate(new Date());
				 Integer  in = iMemberService.updateMemberInfo(dto);
				 map.put("flag", in);
				 result = new BaseResult("success", 0,map);
			 }else {
				 map.put("flag",1);
				 result = new BaseResult("memberId is invaid", 1,map);
			 }
			 log.info("[MemberController:updateInfo]  is end");
			 return JSONObject.fromObject(result).toString();
	  }
	  
	  /**
	   * @desc 会员状态变更
	   * @param MemberId
	   * @param status
	   * @return
	   * **/
	  @RequestMapping("updateStatus")
	  public String updateStatus(MemberDTO dto) {
			 log.info("[MemberController:updateStatus]  is start");
			 Map<String,Object> map = new HashMap<String,Object>();
			 BaseResult result = null;
			 if(dto.getMemberId()!=null && StringUtils.isNotBlank(dto.getStatus())) {
				 Integer  in = iMemberService.updateStatusById(dto);
				 map.put("flag",in>0?0:1);
				 result = new BaseResult("success", 0,map);
			 }else {
				 map.put("flag",1);
				 result = new BaseResult("status or memberId is invaid", 1,map);
			 }
			 log.info("[MemberController:updateStatus]  is end");
			 return JSONObject.fromObject(result).toString();
	  }
	  
	  /**
	   * @desc 会员更换电话号码
	   * @param oldMobile
	   * @param newMobile
	   * @return
	   * **/
	  @RequestMapping("updatePhone")
	  public String updatePhone(String oldMobile,String newMobile) {
			 log.info("[MemberController:updatePhone]  is start");
			 Map<String,Object> map = new HashMap<String,Object>();
			 BaseResult result = null;
			 if(StringUtils.isNotBlank(oldMobile) && StringUtils.isNotBlank(newMobile)) {
				 Map<String,Object> param = new HashMap<String,Object>();
				 param.put("oldMobile", oldMobile);
				 param.put("newMobile", newMobile);
				 Integer  in = iMemberService.updatePhone(param);
				 map.put("flag",in>0?0:1);
				 result = new BaseResult("success", 0,map);
			 }else {
				 map.put("flag",1);
				 result = new BaseResult("mobile is invaid", 1,map);
			 }
			 log.info("[MemberController:updatePhone]  is end");
			 return JSONObject.fromObject(result).toString();
	  }
	  
	  /**
	   * @desc 获取会员列表
	   * @return
	   * **/
	  @RequestMapping("/list")
	  public String list() {
		     log.info("[MemberController:list] is start");
		     Map<String,Object> map = new HashMap<String,Object>();
			 List<MemberDTO> list = iMemberService.queryAllData();
			 log.info("find member info is end");
			 map.put("MemberList",list);
			 BaseResult result = new BaseResult("success", 0,map);
			 log.info("[MemberController:list] is end");
			 return JSONObject.fromObject(result).toString();
		  
	  }
}
